/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RootRouteRouteImport } from './routes/_root/route'
import { Route as RootAboutRouteImport } from './routes/_root/about'
import { Route as RootDefaultIndexRouteImport } from './routes/_root/_default/index'

const RootRouteRoute = RootRouteRouteImport.update({
  id: '/_root',
  getParentRoute: () => rootRouteImport,
} as any)
const RootAboutRoute = RootAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => RootRouteRoute,
} as any)
const RootDefaultIndexRoute = RootDefaultIndexRouteImport.update({
  id: '/_default/',
  path: '/',
  getParentRoute: () => RootRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof RootAboutRoute
  '/': typeof RootDefaultIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof RootAboutRoute
  '/': typeof RootDefaultIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_root': typeof RootRouteRouteWithChildren
  '/_root/about': typeof RootAboutRoute
  '/_root/_default/': typeof RootDefaultIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/about' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/'
  id: '__root__' | '/_root' | '/_root/about' | '/_root/_default/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  RootRouteRoute: typeof RootRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_root': {
      id: '/_root'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof RootRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_root/about': {
      id: '/_root/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof RootAboutRouteImport
      parentRoute: typeof RootRouteRoute
    }
    '/_root/_default/': {
      id: '/_root/_default/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof RootDefaultIndexRouteImport
      parentRoute: typeof RootRouteRoute
    }
  }
}

interface RootRouteRouteChildren {
  RootAboutRoute: typeof RootAboutRoute
  RootDefaultIndexRoute: typeof RootDefaultIndexRoute
}

const RootRouteRouteChildren: RootRouteRouteChildren = {
  RootAboutRoute: RootAboutRoute,
  RootDefaultIndexRoute: RootDefaultIndexRoute,
}

const RootRouteRouteWithChildren = RootRouteRoute._addFileChildren(
  RootRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  RootRouteRoute: RootRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
